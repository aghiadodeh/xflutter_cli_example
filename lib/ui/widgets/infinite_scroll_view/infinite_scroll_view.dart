/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:animated_infinite_scroll_pagination/animated_infinite_scroll_pagination.dart';
import 'package:flutter/material.dart';
import 'package:xflutter_cli_example/config/singleton_config.dart';
import 'package:xflutter_cli_example/ui/core/layouts/base_scroll_view.dart';
import 'pagination_load_widget.dart';
import 'pagination_error_widget.dart';
import '../loaders/loader.dart';
import '../animations/customized_animated_widget.dart';

/// [VM] a view model extends [PaginationViewModel]
/// [T] the Model of item
class InfiniteScrollView<VM extends PaginationViewModel<T>, T extends Object> extends StatelessWidget {
  /// [itemBuilder] callback return [Widget] with item [T].
  final Widget Function(T) itemBuilder;

  /// pass [topWidget] when you want to place a widget at the top of the first [itemBuilder] widget.
  final Widget? topWidget;

  /// [onRefresh] callback called when user swipe to refresh list.
  final Function()? onRefresh;

  /// [ScrollPhysics] of pagination scrollView.
  final ScrollPhysics? physics;

  /// [retry] callback called when pagination request faild and user press on [PaginationErrorWidget].
  final Function()? retry;

  /// warp [ScrollView] in [RefreshIndicator] when [refreshIndicator] == `true`
  ///
  /// default value is `true`
  final bool refreshIndicator;

  /// build [AnimatedInfiniteScrollView] with basic configuration
  const InfiniteScrollView({
    required this.itemBuilder,
    this.refreshIndicator = true,
    this.onRefresh,
    this.topWidget,
    this.retry,
    this.physics,
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return AnimatedInfiniteScrollView<T>(
      viewModel: getSingleton<VM>(),
      refreshIndicator: refreshIndicator,
      topWidget: topWidget,
      loadingWidget: const CustomizedAnimatedWidget(child: Loader()),
      footerLoadingWidget: const PaginationLoaderWidget(),
      errorWidget: PaginationErrorWidget(retry: retry),
      physics: physics ?? scrollPhysics,
      onRefresh: onRefresh,
      itemBuilder: (item) => CustomizedAnimatedWidget(child: itemBuilder.call(item)),
    );
  }
}
