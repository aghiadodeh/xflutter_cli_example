/// Generated By XFlutter Cli.
/// 
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:flutter/material.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';

class TabsViewLayout extends StatefulWidget {
  final MutableLiveData<int> index;
  final List<Widget> tabs;
  final bool scrollable;
  const TabsViewLayout({
    required this.index,
    required this.tabs,
    this.scrollable = true,
    Key? key,
  }) : super(key: key);

  @override
  State<TabsViewLayout> createState() => _TabsViewLayoutState();
}

class _TabsViewLayoutState extends State<TabsViewLayout> with TickerProviderStateMixin {
  late TabController _tabController;

  @override
  void initState() {
    _tabController = TabController(
      length: widget.tabs.length,
      vsync: this,
      initialIndex: widget.index.value - 1,
      animationDuration: const Duration(milliseconds: 200),
    );
    _tabController.addListener(() {
      changeTab(_tabController.index + 1);
    });
    super.initState();
  }

  void changeTab(int index) {
    widget.index.postValue(index);
  }

  @override
  Widget build(BuildContext context) {
    return LiveDataBuilder<int>(
      data: widget.index,
      builder: (context, tab) {
        final index = tab - 1;
        if (_tabController.index != index) _tabController.animateTo(index);

        return TabBarView(
          key: const Key("tabs_view_layout"),
          controller: _tabController,
          physics: widget.scrollable ? const PageScrollPhysics() : const NeverScrollableScrollPhysics(),
          children: widget.tabs,
        );
      },
    );
  }
}
