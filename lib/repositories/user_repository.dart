/// Generated By XFlutter Cli.
/// 
/// more info: https://xflutter-cli.aghiadodeh.com

import 'dart:async';
import 'base_repository.dart';
import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:lazy_evaluation/lazy_evaluation.dart';
import 'package:xflutter_cli_example/models/data_models.dart';
import 'package:xflutter_cli_example/models/responses/base_response/base_response.dart';
import 'package:xflutter_cli_example/network/user_rest_client/user_rest_client.dart';

class UserRepository extends BaseRepository {
  final _userRestClient = Lazy<UserRestClient>(() => UserRestClient(GetIt.I.get<Dio>()));
  UserRestClient get userRestClient => _userRestClient.value;

  Future<BaseResponse<User>> create(User user) async {
    return getResponse(() async {
      return userRestClient.create(user: user).onError((error, _) => catchError<User>(error));
    });
  }

  Future<BaseResponse<User>> update(String id, User user) async {
    return getResponse(() async {
      return userRestClient.update(id: id, user: user).onError((error, _) => catchError<User>(error));
    });
  }

  Future<BaseResponse<List<User>>> findAll(int page, {String? query}) async {
    return getResponse(() async {
      return userRestClient.findAll(page: page, query: query).onError((error, _) => catchError<List<User>>(error));
    });
  }

  Future<BaseResponse<User>> findOne(String id) async {
    return getResponse(() async {
      return userRestClient.findOne(id: id).onError((error, _) => catchError<User>(error));
    });
  }

  Future<BaseResponse<dynamic>> delete(String id) async {
    return getResponse(() async {
      return userRestClient.delete(id: id).onError((error, _) => catchError<dynamic>(error));
    });
  }
}
