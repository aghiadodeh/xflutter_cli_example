/// Generated By XFlutter Cli.
/// 
/// more info: https://xflutter-cli.aghiadodeh.com

import 'package:isar/isar.dart';
import '../../models/data_models.dart';
import '../../network/config/env.dart';
import '../utils/isar_utils.dart';
import '../models/user/user.dart';
import 'package:get_it/get_it.dart';

class IsarUserManager {
  Isar get isar => GetIt.I.get<Isar>();

  /// [User] query builder with pagination
  QueryBuilder<IsarUser, IsarUser, QAfterLimit> _userQueryBuilder(int page) {
    return isar.isarUsers.where().offset(offset(page)).limit(Env.perPage);
  }

  /// find [User] from local-database
  User? findOne(String id) {
    return isar.isarUsers.where().idEqualTo(id).findFirstSync()?.fromIsar();
  }

  /// get cached [User] list with pagination from local-database
  List<User> findAll(int page) {
    final data = _userQueryBuilder(page).findAllSync();
    return data.map((e) => e.fromIsar()).toList();
  }

  /// add/update [User] into local-database
  void insert(User user) {
    isar.writeTxnSync(() => isar.isarUsers.putByIdSync(user.toIsar()));
  }

  /// save list of [User] in local-database
  void insertAll(int page, List<User> data) {
    final objects = data.map((e) => e.toIsar()).toList();
    final local = _userQueryBuilder(page).findAllSync().map((e) => e.id).toList();
    final ids = data.map((e) => e.id).toList();
    final difference = local.where((element) => !ids.contains(element)).toList();

    isar.writeTxnSync(() {
      // delete difference between local and fetched list
      isar.isarUsers.deleteAllByIdSync(difference);

      // save new data
      isar.isarUsers.putAllByIdSync(objects);
    });
  }

  /// delete [User] from local-database
  void delete(String id) {
    isar.writeTxnSync(() => isar.isarUsers.deleteByIdSync(id));
  }
}